///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace UpdatePatient
{
    /// <summary>
    ///The Close recording.
    /// </summary>
    [TestModule("09a93ac3-6694-45ea-b881-11556b966103", ModuleType.Recording, 1)]
    public partial class Close : ITestModule
    {
        /// <summary>
        /// Holds an instance of the UpdatePatientRepository repository.
        /// </summary>
        public static UpdatePatientRepository repo = UpdatePatientRepository.Instance;

        static Close instance = new Close();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Close()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Close Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.1.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.1.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.PlexiaMainFrame.Logoimg' at 154;42.", repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.LogoimgInfo, new RecordItemIndex(0));
            repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.Logoimg.Click("154;42");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OutstandingPopUpModal.Close' at 21;17.", repo.OutstandingPopUpModal.CloseInfo, new RecordItemIndex(1));
            repo.OutstandingPopUpModal.Close.Click("21;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.PlexiaMainFrame.BtnLogout' at 51;7.", repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.BtnLogoutInfo, new RecordItemIndex(2));
            repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.BtnLogout.Click("51;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'PLEXIAEMRTest3Modal'.", repo.PLEXIAEMRTest3Modal.SelfInfo, new RecordItemIndex(3));
            Host.Local.CloseApplication(repo.PLEXIAEMRTest3Modal.Self, new Duration(0));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1000ms.", new RecordItemIndex(4));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
}
