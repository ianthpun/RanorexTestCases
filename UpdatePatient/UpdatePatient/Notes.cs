///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace UpdatePatient
{
    /// <summary>
    ///The Notes recording.
    /// </summary>
    [TestModule("be0a5f39-9f99-4210-a45d-cab6b0813647", ModuleType.Recording, 1)]
    public partial class Notes : ITestModule
    {
        /// <summary>
        /// Holds an instance of the UpdatePatientRepository repository.
        /// </summary>
        public static UpdatePatientRepository repo = UpdatePatientRepository.Instance;

        static Notes instance = new Notes();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Notes()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Notes Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.1.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.1.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.PlexiaMainFrame.PatientRecords.ImgNotes' at 40;21.", repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.PatientRecords.ImgNotesInfo, new RecordItemIndex(0));
            repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.PatientRecords.ImgNotes.Click("40;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.PlexiaMainFrame.BtnNewRichTextNote' at Center.", repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.BtnNewRichTextNoteInfo, new RecordItemIndex(1));
            repo.PLEXIAEMRTest3Modal.PlexiaMainFrame.BtnNewRichTextNote.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.SearchBar.HTML' at 27;10.", repo.PLEXIAEMRTest3Modal.SearchBar.HTMLInfo, new RecordItemIndex(2));
            repo.PLEXIAEMRTest3Modal.SearchBar.HTML.Click("27;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML' at 105;286.", repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTMLInfo, new RecordItemIndex(3));
            repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML.Click("105;286");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML' at 182;95.", repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTMLInfo, new RecordItemIndex(4));
            repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML.Click("182;95");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '<st2:personname w:st=\"on\">Testing</st2:personname>' with focus on 'PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML'.", repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTMLInfo, new RecordItemIndex(5));
            repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML.PressKeys("<st2:personname w:st=\"on\">Testing</st2:personname>");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.SearchBar.Design' at 23;12.", repo.PLEXIAEMRTest3Modal.SearchBar.DesignInfo, new RecordItemIndex(6));
            repo.PLEXIAEMRTest3Modal.SearchBar.Design.Click("23;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Testing') on item 'PLEXIAEMRTest3Modal.SearchBar.Testing'.", repo.PLEXIAEMRTest3Modal.SearchBar.TestingInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.PLEXIAEMRTest3Modal.SearchBar.TestingInfo, "InnerText", "Testing");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PLEXIAEMRTest3Modal.SearchBar.HTML' at 27;10.", repo.PLEXIAEMRTest3Modal.SearchBar.HTMLInfo, new RecordItemIndex(8));
            repo.PLEXIAEMRTest3Modal.SearchBar.HTML.Click("27;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='<st2:personname w:st=\"on\">Testing</st2:personname>') on item 'PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTML'.", repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTMLInfo, new RecordItemIndex(9));
            Validate.Attribute(repo.PLEXIAEMRTest3Modal.SearchBar.RichtextboxHTMLInfo, "TagValue", "<st2:personname w:st=\"on\">Testing</st2:personname>");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
}
